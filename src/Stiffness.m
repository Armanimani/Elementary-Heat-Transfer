function [F,K]=Stiffness(Nx,Ny,Nodes,K,F,known_temp,VL,VR,VT,VB,Q,k,step)
% this function will calculate the stiffness matrix and F matrix that will
% be used as KT=F based on the nodes type that generated by boundary
% function . these node types explained in boundary function

for i=1:Nx*Ny
    I=Nodes(i,3);
    J=Nodes(i,4);
    if(Nodes(i,5)==0)
        %........... midle nodes that are not connected to boundaries.....
        if (and(and(I<Ny-1,I>2),and(J<Nx-1,J>2)))
            K(i,i)=-4;
            K(i,i-1)=1;
            K(i,i+1)=1;
            K(i,i+Nx)=1;
            K(i,i-Nx)=1;
        else
            %.........Rest of midle nodes.....................
        K(i,i)=-4;
            if (or(Nodes(i-1,5)==0,Nodes(i-1,5)==2))
                K(i,i-1)=1;
            elseif (Nodes(i-1,5)==1)
                F(i,1)=F(i,1)-known_temp(i-1,1);
            end

            if (or(Nodes(i+1,5)==0,Nodes(i+1,5)==2))
                K(i,i+1)=1;
            elseif (Nodes(i+1,5)==1)
                F(i,1)=F(i,1)-known_temp(i+1,1);
            end

            if (or(Nodes(i+Nx,5)==0,Nodes(i+Nx,5)==2))
                K(i,i+Nx)=1;
            elseif (Nodes(i+Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i+Nx,1);
            end
            if (or(Nodes(i-Nx,5)==0,Nodes(i-Nx,5)==2))
                K(i,i-Nx)=1;
            elseif (Nodes(i-Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i-Nx,1);
            end
        end
    end
    %................bottom boundary.....................
    if(and(I==1,Nodes(i,5)==2))
        K(i,i)=-4;
        K(i,i+Nx)=2;
        if ((J-1)>0)
            if (Nodes(i-1,5)==1)
                F(i,1)=F(i,1)-known_temp(i-1,1);
            else
                K(i,i-1)=1;
            end
        end
        if ((J+1)<Nx+1)
            if (Nodes(i+1,5)==1)
                F(i,1)=F(i,1)-known_temp(i+1,1);
            else
                K(i,i+1)=1;
            end
        end
        F(i,1)=F(i,1)-VB*step*2/k;
    end
    %..............top boundary........................
    if(and(I==Ny,Nodes(i,5)==2))
        K(i,i)=-4;
        K(i,i-Nx)=2;
        if ((J-1)>0)
            if (Nodes(i-1,5)==1)
                F(i,1)=F(i,1)-known_temp(i-1,1);
            else
                K(i,i-1)=1;
            end
        end
        if ((J+1)<Nx+1)
            if (Nodes(i+1,5)==1)
                F(i,1)=F(i,1)-known_temp(i+1,1);
            else
                K(i,i+1)=1;
            end
        end
        F(i,1)=F(i,1)-VT*step*2/k;
    end
    %.............left boundary.............................
    if(and(J==1,Nodes(i,5)==2))
        K(i,i)=-4;
        K(i,i+1)=2;
        if ((I-1)>0)
            if (Nodes(i-Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i-Nx,1);
            else
                K(i,i-Nx)=1;
            end
        end
        if ((I+1)<Ny+1)
            if (Nodes(i+Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i+Nx,1);
            else
                K(i,i+Nx)=1;
            end
        end
        F(i,1)=F(i,1)-VL*step*2/k;
    end
    %...............right boundary..........................
    if(and(J==Nx,Nodes(i,5)==2))
        K(i,i)=-4;
        K(i,i-1)=2;
        if ((I-1)>0)
            if (Nodes(i-Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i-Nx,1);
            else
                K(i,i-Nx)=1;
            end
        end
        if ((I+1)<Ny+1)
            if (Nodes(i+Nx,5)==1)
                F(i,1)=F(i,1)-known_temp(i+Nx,1);
            else
                K(i,i+Nx)=1;
            end
        end
        F(i,1)=F(i,1)-VR*step*2/k;
    end
end
%...........Adding 2x neumann case ...................

if (Nodes(1,5)==3)
    K(1,1)=-4;
    K(1,2)=2;
    K(1,1+Nx)=2;
    F(1,1)=F(1,1)-VL*step*2/k-VB*step*2/k;
end
if (Nodes(Nx,5)==3)
    K(Nx,Nx)=-4;
    K(Nx,Nx-1)=2;
    K(Nx,2*Nx)=2;
    F(Nx,1)=F(Nx,1)-VR*step*2/k-VB*step*2/k;
end
if (Nodes(Nx*(Ny-1)+1,5)==3)
    K(Nx*(Ny-1)+1,Nx*(Ny-1)+1)=-4;
    K(Nx*(Ny-1)+1,Nx*(Ny-1)+2)=2;
    K(Nx*(Ny-1)+1,Nx*(Ny-1)+1-Nx)=2;
    F(Nx*(Ny-1)+1,1)=F(Nx*(Ny-1)+1,1)-VL*step*2/k-VT*step*2/k;
end
if(Nodes(Nx*Ny,5)==3)
    K(Nx*Ny,Nx*Ny)=-4;
    K(Nx*Ny,Nx*Ny-1)=2;
    K(Nx*Ny,Nx*(Ny-1))=2;
    F(Nx*Ny,1)=F(Nx*Ny,1)-VR*step*2/k-VT*step*2/k;
end
%.........Finishing F matrix by adding Q terms..................
for i=1:Nx*Ny
    F(i,1)=F(i,1)-Q/k*step^2;
end


end

